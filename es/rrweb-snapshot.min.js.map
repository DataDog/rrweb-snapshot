{"version":3,"file":"rrweb-snapshot.min.js","sources":["../src/types.ts","../src/snapshot.ts","../src/css.ts","../src/rebuild.ts"],"sourcesContent":["export enum NodeType {\n  Document,\n  DocumentType,\n  Element,\n  Text,\n  CDATA,\n  Comment,\n}\n\nexport type documentNode = {\n  type: NodeType.Document;\n  childNodes: serializedNodeWithId[];\n};\n\nexport type documentTypeNode = {\n  type: NodeType.DocumentType;\n  name: string;\n  publicId: string;\n  systemId: string;\n};\n\nexport type attributes = {\n  [key: string]: string | number | boolean;\n};\nexport type elementNode = {\n  type: NodeType.Element;\n  tagName: string;\n  attributes: attributes;\n  childNodes: serializedNodeWithId[];\n  isSVG?: true;\n  needBlock?: boolean;\n};\n\nexport type textNode = {\n  type: NodeType.Text;\n  textContent: string;\n  isStyle?: true;\n};\n\nexport type cdataNode = {\n  type: NodeType.CDATA;\n  textContent: '';\n};\n\nexport type commentNode = {\n  type: NodeType.Comment;\n  textContent: string;\n};\n\nexport type serializedNode = (\n  | documentNode\n  | documentTypeNode\n  | elementNode\n  | textNode\n  | cdataNode\n  | commentNode\n) & {\n  rootId?: number;\n};\n\nexport type serializedNodeWithId = serializedNode & { id: number };\n\nexport type tagMap = {\n  [key: string]: string;\n};\n\nexport interface INode extends Node {\n  __sn: serializedNodeWithId;\n}\n\nexport type idNodeMap = {\n  [key: number]: INode;\n};\n\nexport type MaskInputOptions = Partial<{\n  color: boolean;\n  date: boolean;\n  'datetime-local': boolean;\n  email: boolean;\n  month: boolean;\n  number: boolean;\n  range: boolean;\n  search: boolean;\n  tel: boolean;\n  text: boolean;\n  time: boolean;\n  url: boolean;\n  week: boolean;\n  // unify textarea and select element with text input\n  textarea: boolean;\n  select: boolean;\n}>;\n\nexport type SlimDOMOptions = Partial<{\n  script: boolean;\n  comment: boolean;\n  headFavicon: boolean;\n  headWhitespace: boolean;\n  headMetaDescKeywords: boolean;\n  headMetaSocial: boolean;\n  headMetaRobots: boolean;\n  headMetaHttpEquiv: boolean;\n  headMetaAuthorship: boolean;\n  headMetaVerification: boolean;\n}>;\n\nexport type CallbackArray<T = Function> = T[];\n","import {\n  serializedNode,\n  serializedNodeWithId,\n  NodeType,\n  attributes,\n  INode,\n  idNodeMap,\n  MaskInputOptions,\n  SlimDOMOptions,\n} from './types';\n\nlet _id = 1;\nconst tagNameRegex = RegExp('[^a-z1-6-_]');\n\nexport const IGNORED_NODE = -2;\n\nfunction genId(): number {\n  return _id++;\n}\n\nfunction getValidTagName(tagName: string): string {\n  const processedTagName = tagName.toLowerCase().trim();\n\n  if (tagNameRegex.test(processedTagName)) {\n    // if the tag name is odd and we cannot extract\n    // anything from the string, then we return a\n    // generic div\n    return 'div';\n  }\n\n  return processedTagName;\n}\n\nfunction getCssRulesString(s: CSSStyleSheet): string | null {\n  try {\n    const rules = s.rules || s.cssRules;\n    return rules ? Array.from(rules).map(getCssRuleString).join('') : null;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction getCssRuleString(rule: CSSRule): string {\n  return isCSSImportRule(rule)\n    ? getCssRulesString(rule.styleSheet) || ''\n    : rule.cssText;\n}\n\nfunction isCSSImportRule(rule: CSSRule): rule is CSSImportRule {\n  return 'styleSheet' in rule;\n}\n\nfunction extractOrigin(url: string): string {\n  let origin;\n  if (url.indexOf('//') > -1) {\n    origin = url.split('/').slice(0, 3).join('/');\n  } else {\n    origin = url.split('/')[0];\n  }\n  origin = origin.split('?')[0];\n  return origin;\n}\n\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")([^\"]*)\"|([^)]*))\\)/gm;\nconst RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/).*/;\nconst DATA_URI = /^(data:)([\\w\\/\\+\\-]+);(charset=[\\w-]+|base64|utf-?8).*,(.*)/i;\nexport function absoluteToStylesheet(\n  cssText: string | null,\n  href: string,\n): string {\n  return (cssText || '').replace(\n    URL_IN_CSS_REF,\n    (origin, quote1, path1, quote2, path2, path3) => {\n      const filePath = path1 || path2 || path3;\n      const maybe_quote = quote1 || quote2 || '';\n      if (!filePath) {\n        return origin;\n      }\n      if (!RELATIVE_PATH.test(filePath)) {\n        return `url(${maybe_quote}${filePath}${maybe_quote})`;\n      }\n      if (DATA_URI.test(filePath)) {\n        return `url(${maybe_quote}${filePath}${maybe_quote})`;\n      }\n      if (filePath[0] === '/') {\n        return `url(${maybe_quote}${\n          extractOrigin(href) + filePath\n        }${maybe_quote})`;\n      }\n      const stack = href.split('/');\n      const parts = filePath.split('/');\n      stack.pop();\n      for (const part of parts) {\n        if (part === '.') {\n          continue;\n        } else if (part === '..') {\n          stack.pop();\n        } else {\n          stack.push(part);\n        }\n      }\n      return `url(${maybe_quote}${stack.join('/')}${maybe_quote})`;\n    },\n  );\n}\n\nfunction getAbsoluteSrcsetString(doc: Document, attributeValue: string) {\n  if (attributeValue.trim() === '') {\n    return attributeValue;\n  }\n\n  const srcsetValues = attributeValue.split(',');\n  // srcset attributes is defined as such:\n  // srcset = \"url size,url1 size1\"\n  const resultingSrcsetString = srcsetValues\n    .map((srcItem) => {\n      // removing all but middle spaces\n      const trimmedSrcItem = srcItem.trimLeft().trimRight();\n      const urlAndSize = trimmedSrcItem.split(' ');\n      // this means we have both 0:url and 1:size\n      if (urlAndSize.length === 2) {\n        const absUrl = absoluteToDoc(doc, urlAndSize[0]);\n        return `${absUrl} ${urlAndSize[1]}`;\n      } else if (urlAndSize.length === 1) {\n        const absUrl = absoluteToDoc(doc, urlAndSize[0]);\n        return `${absUrl}`;\n      }\n      return '';\n    })\n    .join(', ');\n\n  return resultingSrcsetString;\n}\n\nexport function absoluteToDoc(doc: Document, attributeValue: string): string {\n  if (!attributeValue || attributeValue.trim() === '') {\n    return attributeValue;\n  }\n  const a: HTMLAnchorElement = doc.createElement('a');\n  a.href = attributeValue;\n  return a.href;\n}\n\nfunction isSVGElement(el: Element): boolean {\n  return el.tagName === 'svg' || el instanceof SVGElement;\n}\n\nexport function transformAttribute(\n  doc: Document,\n  name: string,\n  value: string,\n): string {\n  // relative path in attribute\n  if (name === 'src' || (name === 'href' && value)) {\n    return absoluteToDoc(doc, value);\n  } else if (name === 'srcset' && value) {\n    return getAbsoluteSrcsetString(doc, value);\n  } else if (name === 'style' && value) {\n    return absoluteToStylesheet(value, location.href);\n  } else {\n    return value;\n  }\n}\n\nexport function _isBlockedElement(\n  element: HTMLElement,\n  blockClass: string | RegExp,\n  blockSelector: string | null,\n): boolean {\n  if (typeof blockClass === 'string') {\n    if (element.classList.contains(blockClass)) {\n      return true;\n    }\n  } else {\n    element.classList.forEach((className) => {\n      if (blockClass.test(className)) {\n        return true;\n      }\n    });\n  }\n  if (blockSelector) {\n    return element.matches(blockSelector);\n  }\n\n  return false;\n}\n\nfunction serializeNode(\n  n: Node,\n  doc: Document,\n  blockClass: string | RegExp,\n  blockSelector: string | null,\n  inlineStylesheet: boolean,\n  maskInputOptions: MaskInputOptions = {},\n  recordCanvas: boolean,\n): serializedNode | false {\n  // Only record root id when document object is not the base document\n  let rootId: number | undefined;\n  if (((doc as unknown) as INode).__sn) {\n    const docId = ((doc as unknown) as INode).__sn.id;\n    rootId = docId === 1 ? undefined : docId;\n  }\n  switch (n.nodeType) {\n    case n.DOCUMENT_NODE:\n      return {\n        type: NodeType.Document,\n        childNodes: [],\n        rootId,\n      };\n    case n.DOCUMENT_TYPE_NODE:\n      return {\n        type: NodeType.DocumentType,\n        name: (n as DocumentType).name,\n        publicId: (n as DocumentType).publicId,\n        systemId: (n as DocumentType).systemId,\n        rootId,\n      };\n    case n.ELEMENT_NODE:\n      const needBlock = _isBlockedElement(\n        n as HTMLElement,\n        blockClass,\n        blockSelector,\n      );\n      const tagName = getValidTagName((n as HTMLElement).tagName);\n      let attributes: attributes = {};\n      for (const { name, value } of Array.from((n as HTMLElement).attributes)) {\n        attributes[name] = transformAttribute(doc, name, value);\n      }\n      // remote css\n      if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n          return s.href === (n as HTMLLinkElement).href;\n        });\n        const cssText = getCssRulesString(stylesheet as CSSStyleSheet);\n        if (cssText) {\n          delete attributes.rel;\n          delete attributes.href;\n          attributes._cssText = absoluteToStylesheet(\n            cssText,\n            stylesheet!.href!,\n          );\n        }\n      }\n      // dynamic stylesheet\n      if (\n        tagName === 'style' &&\n        (n as HTMLStyleElement).sheet &&\n        // TODO: Currently we only try to get dynamic stylesheet when it is an empty style element\n        !(\n          (n as HTMLElement).innerText ||\n          (n as HTMLElement).textContent ||\n          ''\n        ).trim().length\n      ) {\n        const cssText = getCssRulesString(\n          (n as HTMLStyleElement).sheet as CSSStyleSheet,\n        );\n        if (cssText) {\n          attributes._cssText = absoluteToStylesheet(cssText, location.href);\n        }\n      }\n      // form fields\n      if (\n        tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select'\n      ) {\n        const value = (n as HTMLInputElement | HTMLTextAreaElement).value;\n        if (\n          attributes.type !== 'radio' &&\n          attributes.type !== 'checkbox' &&\n          attributes.type !== 'submit' &&\n          attributes.type !== 'button' &&\n          value\n        ) {\n          attributes.value =\n            maskInputOptions[attributes.type as keyof MaskInputOptions] ||\n            maskInputOptions[tagName as keyof MaskInputOptions]\n              ? '*'.repeat(value.length)\n              : value;\n        } else if ((n as HTMLInputElement).checked) {\n          attributes.checked = (n as HTMLInputElement).checked;\n        }\n      }\n      if (tagName === 'option') {\n        const selectValue = (n as HTMLOptionElement).parentElement;\n        if (attributes.value === (selectValue as HTMLSelectElement).value) {\n          attributes.selected = (n as HTMLOptionElement).selected;\n        }\n      }\n      // canvas image data\n      if (tagName === 'canvas' && recordCanvas) {\n        attributes.rr_dataURL = (n as HTMLCanvasElement).toDataURL();\n      }\n      // media elements\n      if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = (n as HTMLMediaElement).paused\n          ? 'paused'\n          : 'played';\n      }\n      // scroll\n      if ((n as HTMLElement).scrollLeft) {\n        attributes.rr_scrollLeft = (n as HTMLElement).scrollLeft;\n      }\n      if ((n as HTMLElement).scrollTop) {\n        attributes.rr_scrollTop = (n as HTMLElement).scrollTop;\n      }\n      if (needBlock) {\n        const { width, height } = (n as HTMLElement).getBoundingClientRect();\n        attributes.rr_width = `${width}px`;\n        attributes.rr_height = `${height}px`;\n      }\n      return {\n        type: NodeType.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n as Element) || undefined,\n        needBlock,\n        rootId,\n      };\n    case n.TEXT_NODE:\n      // The parent node may not be a html element which has a tagName attribute.\n      // So just let it be undefined which is ok in this use case.\n      const parentTagName =\n        n.parentNode && (n.parentNode as HTMLElement).tagName;\n      let textContent = (n as Text).textContent;\n      const isStyle = parentTagName === 'STYLE' ? true : undefined;\n      if (isStyle && textContent) {\n        textContent = absoluteToStylesheet(textContent, location.href);\n      }\n      if (parentTagName === 'SCRIPT') {\n        textContent = 'SCRIPT_PLACEHOLDER';\n      }\n      return {\n        type: NodeType.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n      };\n    case n.CDATA_SECTION_NODE:\n      return {\n        type: NodeType.CDATA,\n        textContent: '',\n        rootId,\n      };\n    case n.COMMENT_NODE:\n      return {\n        type: NodeType.Comment,\n        textContent: (n as Comment).textContent || '',\n        rootId,\n      };\n    default:\n      return false;\n  }\n}\n\nfunction lowerIfExists(maybeAttr: string | number | boolean): string {\n  if (maybeAttr === undefined) {\n    return '';\n  } else {\n    return (maybeAttr as string).toLowerCase();\n  }\n}\n\nfunction slimDOMExcluded(\n  sn: serializedNode,\n  slimDOMOptions: SlimDOMOptions,\n): boolean {\n  if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\n    // TODO: convert IE conditional comments to real nodes\n    return true;\n  } else if (sn.type === NodeType.Element) {\n    if (\n      slimDOMOptions.script &&\n      (sn.tagName === 'script' ||\n        (sn.tagName === 'link' &&\n          sn.attributes.rel === 'preload' &&\n          sn.attributes['as'] === 'script'))\n    ) {\n      return true;\n    } else if (\n      slimDOMOptions.headFavicon &&\n      ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n        (sn.tagName === 'meta' &&\n          (lowerIfExists(sn.attributes['name']).match(\n            /^msapplication-tile(image|color)$/,\n          ) ||\n            lowerIfExists(sn.attributes['name']) === 'application-name' ||\n            lowerIfExists(sn.attributes['rel']) === 'icon' ||\n            lowerIfExists(sn.attributes['rel']) === 'apple-touch-icon' ||\n            lowerIfExists(sn.attributes['rel']) === 'shortcut icon')))\n    ) {\n      return true;\n    } else if (sn.tagName === 'meta') {\n      if (\n        slimDOMOptions.headMetaDescKeywords &&\n        lowerIfExists(sn.attributes['name']).match(/^description|keywords$/)\n      ) {\n        return true;\n      } else if (\n        slimDOMOptions.headMetaSocial &&\n        (lowerIfExists(sn.attributes['property']).match(/^(og|twitter|fb):/) || // og = opengraph (facebook)\n          lowerIfExists(sn.attributes['name']).match(/^(og|twitter):/) ||\n          lowerIfExists(sn.attributes['name']) === 'pinterest')\n      ) {\n        return true;\n      } else if (\n        slimDOMOptions.headMetaRobots &&\n        (lowerIfExists(sn.attributes['name']) === 'robots' ||\n          lowerIfExists(sn.attributes['name']) === 'googlebot' ||\n          lowerIfExists(sn.attributes['name']) === 'bingbot')\n      ) {\n        return true;\n      } else if (\n        slimDOMOptions.headMetaHttpEquiv &&\n        sn.attributes['http-equiv'] !== undefined\n      ) {\n        // e.g. X-UA-Compatible, Content-Type, Content-Language,\n        // cache-control, X-Translated-By\n        return true;\n      } else if (\n        slimDOMOptions.headMetaAuthorship &&\n        (lowerIfExists(sn.attributes['name']) === 'author' ||\n          lowerIfExists(sn.attributes['name']) === 'generator' ||\n          lowerIfExists(sn.attributes['name']) === 'framework' ||\n          lowerIfExists(sn.attributes['name']) === 'publisher' ||\n          lowerIfExists(sn.attributes['name']) === 'progid' ||\n          lowerIfExists(sn.attributes['property']).match(/^article:/) ||\n          lowerIfExists(sn.attributes['property']).match(/^product:/))\n      ) {\n        return true;\n      } else if (\n        slimDOMOptions.headMetaVerification &&\n        (lowerIfExists(sn.attributes['name']) === 'google-site-verification' ||\n          lowerIfExists(sn.attributes['name']) === 'yandex-verification' ||\n          lowerIfExists(sn.attributes['name']) === 'csrf-token' ||\n          lowerIfExists(sn.attributes['name']) === 'p:domain_verify' ||\n          lowerIfExists(sn.attributes['name']) === 'verify-v1' ||\n          lowerIfExists(sn.attributes['name']) === 'verification' ||\n          lowerIfExists(sn.attributes['name']) === 'shopify-checkout-api-token')\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function serializeNodeWithId(\n  n: Node | INode,\n  doc: Document,\n  map: idNodeMap,\n  blockClass: string | RegExp,\n  blockSelector: string | null,\n  skipChild = false,\n  inlineStylesheet = true,\n  maskInputOptions?: MaskInputOptions,\n  slimDOMOptions: SlimDOMOptions = {},\n  recordCanvas?: boolean,\n  preserveWhiteSpace = true,\n  onSerialize?: (n: INode) => unknown,\n): serializedNodeWithId | null {\n  const _serializedNode = serializeNode(\n    n,\n    doc,\n    blockClass,\n    blockSelector,\n    inlineStylesheet,\n    maskInputOptions,\n    recordCanvas || false,\n  );\n  if (!_serializedNode) {\n    // TODO: dev only\n    console.warn(n, 'not serialized');\n    return null;\n  }\n\n  let id;\n  // Try to reuse the previous id\n  if ('__sn' in n) {\n    id = n.__sn.id;\n  } else if (\n    slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n    (!preserveWhiteSpace &&\n      _serializedNode.type === NodeType.Text &&\n      !_serializedNode.isStyle &&\n      !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)\n  ) {\n    id = IGNORED_NODE;\n  } else {\n    id = genId();\n  }\n  const serializedNode = Object.assign(_serializedNode, { id });\n  (n as INode).__sn = serializedNode;\n  if (id === IGNORED_NODE) {\n    return null; // slimDOM\n  }\n  map[id] = n as INode;\n  if (onSerialize) {\n    onSerialize(n as INode);\n  }\n  let recordChild = !skipChild;\n  if (serializedNode.type === NodeType.Element) {\n    recordChild = recordChild && !serializedNode.needBlock;\n    // this property was not needed in replay side\n    delete serializedNode.needBlock;\n  }\n  if (\n    (serializedNode.type === NodeType.Document ||\n      serializedNode.type === NodeType.Element) &&\n    recordChild\n  ) {\n    if (\n      slimDOMOptions.headWhitespace &&\n      _serializedNode.type === NodeType.Element &&\n      _serializedNode.tagName == 'head'\n      // would impede performance: || getComputedStyle(n)['white-space'] === 'normal'\n    ) {\n      preserveWhiteSpace = false;\n    }\n    for (const childN of Array.from(n.childNodes)) {\n      const serializedChildNode = serializeNodeWithId(\n        childN,\n        doc,\n        map,\n        blockClass,\n        blockSelector,\n        skipChild,\n        inlineStylesheet,\n        maskInputOptions,\n        slimDOMOptions,\n        recordCanvas,\n        preserveWhiteSpace,\n      );\n      if (serializedChildNode) {\n        serializedNode.childNodes.push(serializedChildNode);\n      }\n    }\n  }\n\n  if (\n    serializedNode.type === NodeType.Element &&\n    serializedNode.tagName === 'iframe'\n  ) {\n    const iframeDoc = (n as HTMLIFrameElement).contentDocument;\n    if (iframeDoc) {\n      const serializedIframeNode = serializeNodeWithId(\n        iframeDoc,\n        iframeDoc,\n        map,\n        blockClass,\n        blockSelector,\n        false,\n        inlineStylesheet,\n        maskInputOptions,\n        slimDOMOptions,\n        recordCanvas,\n      );\n      if (serializedIframeNode) {\n        serializedNode.childNodes.push(serializedIframeNode);\n      }\n    }\n  }\n\n  return serializedNode;\n}\n\nfunction snapshot(\n  n: Document,\n  blockClass: string | RegExp = 'rr-block',\n  inlineStylesheet = true,\n  maskAllInputsOrOptions: boolean | MaskInputOptions,\n  slimDOMSensibleOrOptions: boolean | SlimDOMOptions,\n  recordCanvas?: boolean,\n  blockSelector: string | null = null,\n  preserveWhiteSpace?: boolean,\n  onSerialize?: (n: INode) => unknown,\n): [serializedNodeWithId | null, idNodeMap] {\n  const idNodeMap: idNodeMap = {};\n  const maskInputOptions: MaskInputOptions =\n    maskAllInputsOrOptions === true\n      ? {\n          color: true,\n          date: true,\n          'datetime-local': true,\n          email: true,\n          month: true,\n          number: true,\n          range: true,\n          search: true,\n          tel: true,\n          text: true,\n          time: true,\n          url: true,\n          week: true,\n          textarea: true,\n          select: true,\n        }\n      : maskAllInputsOrOptions === false\n      ? {}\n      : maskAllInputsOrOptions;\n  const slimDOMOptions: SlimDOMOptions =\n    slimDOMSensibleOrOptions === true || slimDOMSensibleOrOptions === 'all'\n      ? // if true: set of sensible options that should not throw away any information\n        {\n          script: true,\n          comment: true,\n          headFavicon: true,\n          headWhitespace: true,\n          headMetaDescKeywords: slimDOMSensibleOrOptions === 'all', // destructive\n          headMetaSocial: true,\n          headMetaRobots: true,\n          headMetaHttpEquiv: true,\n          headMetaAuthorship: true,\n          headMetaVerification: true,\n        }\n      : slimDOMSensibleOrOptions === false\n      ? {}\n      : slimDOMSensibleOrOptions;\n  return [\n    serializeNodeWithId(\n      n,\n      n,\n      idNodeMap,\n      blockClass,\n      blockSelector,\n      false,\n      inlineStylesheet,\n      maskInputOptions,\n      slimDOMOptions,\n      recordCanvas,\n      preserveWhiteSpace,\n      onSerialize,\n    ),\n    idNodeMap,\n  ];\n}\n\nexport function visitSnapshot(\n  node: serializedNodeWithId,\n  onVisit: (node: serializedNodeWithId) => unknown,\n) {\n  function walk(current: serializedNodeWithId) {\n    onVisit(current);\n    if (\n      current.type === NodeType.Document ||\n      current.type === NodeType.Element\n    ) {\n      current.childNodes.forEach(walk);\n    }\n  }\n\n  walk(node);\n}\n\nexport function cleanupSnapshot() {\n  // allow a new recording to start numbering nodes from scratch\n  _id = 1;\n}\n\nexport default snapshot;\n","/**\n * This file is a fork of https://github.com/reworkcss/css/blob/master/lib/parse/index.js\n * I fork it because:\n * 1. The css library was built for node.js which does not have tree-shaking supports.\n * 2. Rewrites into typescript give us a better type interface.\n */\n\n/* tslint:disable no-conditional-assignment interface-name no-shadowed-variable */\n\nexport interface ParserOptions {\n  /** Silently fail on parse errors */\n  silent?: boolean;\n  /**\n   * The path to the file containing css.\n   * Makes errors and source maps more helpful, by letting them know where code comes from.\n   */\n  source?: string;\n}\n\n/**\n * Error thrown during parsing.\n */\nexport interface ParserError {\n  /** The full error message with the source position. */\n  message?: string;\n  /** The error message without position. */\n  reason?: string;\n  /** The value of options.source if passed to css.parse. Otherwise undefined. */\n  filename?: string;\n  line?: number;\n  column?: number;\n  /** The portion of code that couldn't be parsed. */\n  source?: string;\n}\n\nexport interface Loc {\n  line?: number;\n  column?: number;\n}\n\n/**\n * Base AST Tree Node.\n */\nexport interface Node {\n  /** The possible values are the ones listed in the Types section on https://github.com/reworkcss/css page. */\n  type?: string;\n  /** A reference to the parent node, or null if the node has no parent. */\n  parent?: Node;\n  /** Information about the position in the source string that corresponds to the node. */\n  position?: {\n    start?: Loc;\n    end?: Loc;\n    /** The value of options.source if passed to css.parse. Otherwise undefined. */\n    source?: string;\n    /** The full source string passed to css.parse. */\n    content?: string;\n  };\n}\n\nexport interface Rule extends Node {\n  /** The list of selectors of the rule, split on commas. Each selector is trimmed from whitespace and comments. */\n  selectors?: string[];\n  /** Array of nodes with the types declaration and comment. */\n  declarations?: Array<Declaration | Comment>;\n}\n\nexport interface Declaration extends Node {\n  /** The property name, trimmed from whitespace and comments. May not be empty. */\n  property?: string;\n  /** The value of the property, trimmed from whitespace and comments. Empty values are allowed. */\n  value?: string;\n}\n\n/**\n * A rule-level or declaration-level comment. Comments inside selectors, properties and values etc. are lost.\n */\nexport interface Comment extends Node {\n  comment?: string;\n}\n\n/**\n * The @charset at-rule.\n */\nexport interface Charset extends Node {\n  /** The part following @charset. */\n  charset?: string;\n}\n\n/**\n * The @custom-media at-rule\n */\nexport interface CustomMedia extends Node {\n  /** The ---prefixed name. */\n  name?: string;\n  /** The part following the name. */\n  media?: string;\n}\n\n/**\n * The @document at-rule.\n */\nexport interface Document extends Node {\n  /** The part following @document. */\n  document?: string;\n  /** The vendor prefix in @document, or undefined if there is none. */\n  vendor?: string;\n  /** Array of nodes with the types rule, comment and any of the at-rule types. */\n  rules?: Array<Rule | Comment | AtRule>;\n}\n\n/**\n * The @font-face at-rule.\n */\nexport interface FontFace extends Node {\n  /** Array of nodes with the types declaration and comment. */\n  declarations?: Array<Declaration | Comment>;\n}\n\n/**\n * The @host at-rule.\n */\nexport interface Host extends Node {\n  /** Array of nodes with the types rule, comment and any of the at-rule types. */\n  rules?: Array<Rule | Comment | AtRule>;\n}\n\n/**\n * The @import at-rule.\n */\nexport interface Import extends Node {\n  /** The part following @import. */\n  import?: string;\n}\n\n/**\n * The @keyframes at-rule.\n */\nexport interface KeyFrames extends Node {\n  /** The name of the keyframes rule. */\n  name?: string;\n  /** The vendor prefix in @keyframes, or undefined if there is none. */\n  vendor?: string;\n  /** Array of nodes with the types keyframe and comment. */\n  keyframes?: Array<KeyFrame | Comment>;\n}\n\nexport interface KeyFrame extends Node {\n  /** The list of \"selectors\" of the keyframe rule, split on commas. Each “selector” is trimmed from whitespace. */\n  values?: string[];\n  /** Array of nodes with the types declaration and comment. */\n  declarations?: Array<Declaration | Comment>;\n}\n\n/**\n * The @media at-rule.\n */\nexport interface Media extends Node {\n  /** The part following @media. */\n  media?: string;\n  /** Array of nodes with the types rule, comment and any of the at-rule types. */\n  rules?: Array<Rule | Comment | AtRule>;\n}\n\n/**\n * The @namespace at-rule.\n */\nexport interface Namespace extends Node {\n  /** The part following @namespace. */\n  namespace?: string;\n}\n\n/**\n * The @page at-rule.\n */\nexport interface Page extends Node {\n  /** The list of selectors of the rule, split on commas. Each selector is trimmed from whitespace and comments. */\n  selectors?: string[];\n  /** Array of nodes with the types declaration and comment. */\n  declarations?: Array<Declaration | Comment>;\n}\n\n/**\n * The @supports at-rule.\n */\nexport interface Supports extends Node {\n  /** The part following @supports. */\n  supports?: string;\n  /** Array of nodes with the types rule, comment and any of the at-rule types. */\n  rules?: Array<Rule | Comment | AtRule>;\n}\n\n/** All at-rules. */\nexport type AtRule =\n  | Charset\n  | CustomMedia\n  | Document\n  | FontFace\n  | Host\n  | Import\n  | KeyFrames\n  | Media\n  | Namespace\n  | Page\n  | Supports;\n\n/**\n * A collection of rules\n */\nexport interface StyleRules {\n  source?: string;\n  /** Array of nodes with the types rule, comment and any of the at-rule types. */\n  rules: Array<Rule | Comment | AtRule>;\n  /** Array of Errors. Errors collected during parsing when option silent is true. */\n  parsingErrors?: ParserError[];\n}\n\n/**\n * The root node returned by css.parse.\n */\nexport interface Stylesheet extends Node {\n  stylesheet?: StyleRules;\n}\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nexport function parse(css: string, options: ParserOptions = {}) {\n  /**\n   * Positional.\n   */\n\n  let lineno = 1;\n  let column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str: string) {\n    const lines = str.match(/\\n/g);\n    if (lines) {\n      lineno += lines.length;\n    }\n    let i = str.lastIndexOf('\\n');\n    column = i === -1 ? column + str.length : str.length - i;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   */\n\n  function position() {\n    const start = { line: lineno, column };\n    return (\n      node: Rule | Declaration | Comment | AtRule | Stylesheet | KeyFrame,\n    ) => {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node\n   */\n\n  class Position {\n    public content!: string;\n    public start!: Loc;\n    public end!: Loc;\n    public source?: string;\n\n    constructor(start: Loc) {\n      this.start = start;\n      this.end = { line: lineno, column };\n      this.source = options.source;\n    }\n  }\n\n  /**\n   * Non-enumerable source string\n   */\n\n  Position.prototype.content = css;\n\n  const errorsList: ParserError[] = [];\n\n  function error(msg: string) {\n    const err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg,\n    ) as ParserError;\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet(): Stylesheet {\n    const rulesList = rules();\n\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        source: options.source,\n        rules: rulesList,\n        parsingErrors: errorsList,\n      },\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    let node: Rule | void;\n    const rules: Rule[] = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\n      if (node !== false) {\n        rules.push(node);\n        comments(rules);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re: RegExp) {\n    const m = re.exec(css);\n    if (!m) {\n      return;\n    }\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules: Rule[] = []) {\n    let c: Comment | void;\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n      c = comment();\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    const pos = position();\n    if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\n      return;\n    }\n\n    let i = 2;\n    while (\n      '' !== css.charAt(i) &&\n      ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if ('' === css.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    const str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n\n    return pos({\n      type: 'comment',\n      comment: str,\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    const m = match(/^([^{]+)/);\n    if (!m) {\n      return;\n    }\n    /* @fix Remove all comments from selectors\n     * http://ostermiller.org/findcomment.html */\n    return trim(m[0])\n      .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n      .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, m => {\n        return m.replace(/,/g, '\\u200C');\n      })\n      .split(/\\s*(?![^(]*\\)),\\s*/)\n      .map(s => {\n        return s.replace(/\\u200C/g, ',');\n      });\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration(): Declaration | void | never {\n    const pos = position();\n\n    // prop\n    let propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!propMatch) {\n      return;\n    }\n    const prop = trim(propMatch[0]);\n\n    // :\n    if (!match(/^:\\s*/)) {\n      return error(`property missing ':'`);\n    }\n\n    // val\n    const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n\n    const ret = pos({\n      type: 'declaration',\n      property: prop.replace(commentre, ''),\n      value: val ? trim(val[0]).replace(commentre, '') : '',\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    const decls: Array<object> = [];\n\n    if (!open()) {\n      return error(`missing '{'`);\n    }\n    comments(decls);\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      if ((decl as unknown) !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n      decl = declaration();\n    }\n\n    if (!close()) {\n      return error(`missing '}'`);\n    }\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n\n    while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) {\n      return;\n    }\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations() as Declaration[],\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    const pos = position();\n    let m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n    if (!m) {\n      return;\n    }\n    const vendor = m[1];\n\n    // identifier\n    m = match(/^([-\\w]+)\\s*/);\n    if (!m) {\n      return error('@keyframes missing name');\n    }\n    const name = m[1];\n\n    if (!open()) {\n      return error(`@keyframes missing '{'`);\n    }\n\n    let frame;\n    let frames = comments();\n    while ((frame = keyframe())) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) {\n      return error(`@keyframes missing '}'`);\n    }\n\n    return pos({\n      type: 'keyframes',\n      name,\n      vendor,\n      keyframes: frames,\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    const pos = position();\n    const m = match(/^@supports *([^{]+)/);\n\n    if (!m) {\n      return;\n    }\n    const supports = trim(m[1]);\n\n    if (!open()) {\n      return error(`@supports missing '{'`);\n    }\n\n    const style = comments().concat(rules());\n\n    if (!close()) {\n      return error(`@supports missing '}'`);\n    }\n\n    return pos({\n      type: 'supports',\n      supports,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse host.\n   */\n\n  function athost() {\n    const pos = position();\n    const m = match(/^@host\\s*/);\n\n    if (!m) {\n      return;\n    }\n\n    if (!open()) {\n      return error(`@host missing '{'`);\n    }\n\n    const style = comments().concat(rules());\n\n    if (!close()) {\n      return error(`@host missing '}'`);\n    }\n\n    return pos({\n      type: 'host',\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    const pos = position();\n    const m = match(/^@media *([^{]+)/);\n\n    if (!m) {\n      return;\n    }\n    const media = trim(m[1]);\n\n    if (!open()) {\n      return error(`@media missing '{'`);\n    }\n\n    const style = comments().concat(rules());\n\n    if (!close()) {\n      return error(`@media missing '}'`);\n    }\n\n    return pos({\n      type: 'media',\n      media,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse custom-media.\n   */\n\n  function atcustommedia() {\n    const pos = position();\n    const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) {\n      return;\n    }\n\n    return pos({\n      type: 'custom-media',\n      name: trim(m[1]),\n      media: trim(m[2]),\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    const pos = position();\n    const m = match(/^@page */);\n    if (!m) {\n      return;\n    }\n\n    const sel = selector() || [];\n\n    if (!open()) {\n      return error(`@page missing '{'`);\n    }\n    let decls = comments();\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) {\n      return error(`@page missing '}'`);\n    }\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls,\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    const pos = position();\n    const m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) {\n      return;\n    }\n\n    const vendor = trim(m[1]);\n    const doc = trim(m[2]);\n\n    if (!open()) {\n      return error(`@document missing '{'`);\n    }\n\n    const style = comments().concat(rules());\n\n    if (!close()) {\n      return error(`@document missing '}'`);\n    }\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse font-face.\n   */\n\n  function atfontface() {\n    const pos = position();\n    const m = match(/^@font-face\\s*/);\n    if (!m) {\n      return;\n    }\n\n    if (!open()) {\n      return error(`@font-face missing '{'`);\n    }\n    let decls = comments();\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) {\n      return error(`@font-face missing '}'`);\n    }\n\n    return pos({\n      type: 'font-face',\n      declarations: decls,\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  const atimport = _compileAtrule('import');\n\n  /**\n   * Parse charset\n   */\n\n  const atcharset = _compileAtrule('charset');\n\n  /**\n   * Parse namespace\n   */\n\n  const atnamespace = _compileAtrule('namespace');\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _compileAtrule(name: string) {\n    const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\n    return () => {\n      const pos = position();\n      const m = match(re);\n      if (!m) {\n        return;\n      }\n      const ret: Record<string, string> = { type: name };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    };\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    if (css[0] !== '@') {\n      return;\n    }\n\n    return (\n      atkeyframes() ||\n      atmedia() ||\n      atcustommedia() ||\n      atsupports() ||\n      atimport() ||\n      atcharset() ||\n      atnamespace() ||\n      atdocument() ||\n      atpage() ||\n      athost() ||\n      atfontface()\n    );\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    const pos = position();\n    const sel = selector();\n\n    if (!sel) {\n      return error('selector missing');\n    }\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations() as Declaration[],\n    });\n  }\n\n  return addParent(stylesheet());\n}\n\n/**\n * Trim `str`.\n */\n\nfunction trim(str: string) {\n  return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\n}\n\n/**\n * Adds non-enumerable parent node reference to each node.\n */\n\nfunction addParent(obj: Stylesheet, parent?: Stylesheet) {\n  const isNode = obj && typeof obj.type === 'string';\n  const childParent = isNode ? obj : parent;\n\n  for (const k of Object.keys(obj)) {\n    const value = obj[k as keyof Stylesheet];\n    if (Array.isArray(value)) {\n      value.forEach(v => {\n        addParent(v, childParent);\n      });\n    } else if (value && typeof value === 'object') {\n      addParent((value as unknown) as Stylesheet, childParent);\n    }\n  }\n\n  if (isNode) {\n    Object.defineProperty(obj, 'parent', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null,\n    });\n  }\n\n  return obj;\n}\n","import { parse } from './css';\nimport {\n  serializedNodeWithId,\n  NodeType,\n  tagMap,\n  elementNode,\n  idNodeMap,\n  INode,\n  CallbackArray,\n} from './types';\n\nconst tagMap: tagMap = {\n  script: 'noscript',\n  // camel case svg element tag names\n  altglyph: 'altGlyph',\n  altglyphdef: 'altGlyphDef',\n  altglyphitem: 'altGlyphItem',\n  animatecolor: 'animateColor',\n  animatemotion: 'animateMotion',\n  animatetransform: 'animateTransform',\n  clippath: 'clipPath',\n  feblend: 'feBlend',\n  fecolormatrix: 'feColorMatrix',\n  fecomponenttransfer: 'feComponentTransfer',\n  fecomposite: 'feComposite',\n  feconvolvematrix: 'feConvolveMatrix',\n  fediffuselighting: 'feDiffuseLighting',\n  fedisplacementmap: 'feDisplacementMap',\n  fedistantlight: 'feDistantLight',\n  fedropshadow: 'feDropShadow',\n  feflood: 'feFlood',\n  fefunca: 'feFuncA',\n  fefuncb: 'feFuncB',\n  fefuncg: 'feFuncG',\n  fefuncr: 'feFuncR',\n  fegaussianblur: 'feGaussianBlur',\n  feimage: 'feImage',\n  femerge: 'feMerge',\n  femergenode: 'feMergeNode',\n  femorphology: 'feMorphology',\n  feoffset: 'feOffset',\n  fepointlight: 'fePointLight',\n  fespecularlighting: 'feSpecularLighting',\n  fespotlight: 'feSpotLight',\n  fetile: 'feTile',\n  feturbulence: 'feTurbulence',\n  foreignobject: 'foreignObject',\n  glyphref: 'glyphRef',\n  lineargradient: 'linearGradient',\n  radialgradient: 'radialGradient',\n};\nfunction getTagName(n: elementNode): string {\n  let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\n  if (tagName === 'link' && n.attributes._cssText) {\n    tagName = 'style';\n  }\n  return tagName;\n}\n\nconst HOVER_SELECTOR = /([^\\\\]):hover/g;\nexport function addHoverClass(cssText: string): string {\n  const ast = parse(cssText, { silent: true });\n  if (!ast.stylesheet) {\n    return cssText;\n  }\n  ast.stylesheet.rules.forEach((rule) => {\n    if ('selectors' in rule) {\n      (rule.selectors || []).forEach((selector: string) => {\n        if (HOVER_SELECTOR.test(selector)) {\n          const newSelector = selector.replace(HOVER_SELECTOR, '$1.\\\\:hover');\n          cssText = cssText.replace(selector, `${selector}, ${newSelector}`);\n        }\n      });\n    }\n  });\n  return cssText;\n}\n\nfunction isIframe(n: serializedNodeWithId) {\n  return n.type === NodeType.Element && n.tagName === 'iframe';\n}\n\nfunction buildIframe(\n  iframe: HTMLIFrameElement,\n  childNodes: serializedNodeWithId[],\n  map: idNodeMap,\n  cbs: CallbackArray,\n  HACK_CSS: boolean,\n) {\n  const targetDoc = iframe.contentDocument!;\n  for (const childN of childNodes) {\n    console.log('build iframe', childN);\n    buildNodeWithSN(childN, targetDoc, map, cbs, false, HACK_CSS);\n  }\n}\n\nfunction buildNode(\n  n: serializedNodeWithId,\n  doc: Document,\n  HACK_CSS: boolean,\n): Node | null {\n  switch (n.type) {\n    case NodeType.Document:\n      return doc.implementation.createDocument(null, '', null);\n    case NodeType.DocumentType:\n      return doc.implementation.createDocumentType(\n        n.name || 'html',\n        n.publicId,\n        n.systemId,\n      );\n    case NodeType.Element:\n      const tagName = getTagName(n);\n      let node: Element;\n      if (n.isSVG) {\n        node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\n      } else {\n        node = doc.createElement(tagName);\n      }\n      for (const name in n.attributes) {\n        if (!n.attributes.hasOwnProperty(name)) {\n          continue;\n        }\n        let value = n.attributes[name];\n        value =\n          typeof value === 'boolean' || typeof value === 'number' ? '' : value;\n        // attribute names start with rr_ are internal attributes added by rrweb\n        if (!name.startsWith('rr_')) {\n          const isTextarea = tagName === 'textarea' && name === 'value';\n          const isRemoteOrDynamicCss =\n            tagName === 'style' && name === '_cssText';\n          if (isRemoteOrDynamicCss && HACK_CSS) {\n            value = addHoverClass(value);\n          }\n          if (isTextarea || isRemoteOrDynamicCss) {\n            const child = doc.createTextNode(value);\n            // https://github.com/rrweb-io/rrweb/issues/112\n            for (const c of Array.from(node.childNodes)) {\n              if (c.nodeType === node.TEXT_NODE) {\n                node.removeChild(c);\n              }\n            }\n            node.appendChild(child);\n            continue;\n          }\n          if (tagName === 'iframe' && name === 'src') {\n            continue;\n          }\n          try {\n            if (n.isSVG && name === 'xlink:href') {\n              node.setAttributeNS('http://www.w3.org/1999/xlink', name, value);\n            } else if (\n              name === 'onload' ||\n              name === 'onclick' ||\n              name.substring(0, 7) === 'onmouse'\n            ) {\n              // Rename some of the more common atttributes from https://www.w3schools.com/tags/ref_eventattributes.asp\n              // as setting them triggers a console.error (which shows up despite the try/catch)\n              // Assumption: these attributes are not used to css\n              node.setAttribute('_' + name, value);\n            } else {\n              node.setAttribute(name, value);\n            }\n          } catch (error) {\n            // skip invalid attribute\n          }\n        } else {\n          // handle internal attributes\n          if (tagName === 'canvas' && name === 'rr_dataURL') {\n            const image = document.createElement('img');\n            image.src = value;\n            image.onload = () => {\n              const ctx = (node as HTMLCanvasElement).getContext('2d');\n              if (ctx) {\n                ctx.drawImage(image, 0, 0, image.width, image.height);\n              }\n            };\n          }\n          if (name === 'rr_width') {\n            (node as HTMLElement).style.width = value;\n          }\n          if (name === 'rr_height') {\n            (node as HTMLElement).style.height = value;\n          }\n          if (name === 'rr_mediaState') {\n            switch (value) {\n              case 'played':\n                (node as HTMLMediaElement).play();\n              case 'paused':\n                (node as HTMLMediaElement).pause();\n                break;\n              default:\n            }\n          }\n        }\n      }\n      return node;\n    case NodeType.Text:\n      return doc.createTextNode(\n        n.isStyle && HACK_CSS ? addHoverClass(n.textContent) : n.textContent,\n      );\n    case NodeType.CDATA:\n      return doc.createCDATASection(n.textContent);\n    case NodeType.Comment:\n      return doc.createComment(n.textContent);\n    default:\n      return null;\n  }\n}\n\nexport function buildNodeWithSN(\n  n: serializedNodeWithId,\n  doc: Document,\n  map: idNodeMap,\n  cbs: CallbackArray,\n  skipChild = false,\n  HACK_CSS = true,\n): [INode | null, serializedNodeWithId[]] {\n  let node = buildNode(n, doc, HACK_CSS);\n  if (!node) {\n    return [null, []];\n  }\n  if (n.rootId) {\n    console.assert(\n      ((map[n.rootId] as unknown) as Document) === doc,\n      'Target document should has the same root id.',\n    );\n  }\n  // use target document as root document\n  if (n.type === NodeType.Document) {\n    // close before open to make sure document was closed\n    doc.close();\n    doc.open();\n    node = doc;\n  }\n\n  (node as INode).__sn = n;\n  map[n.id] = node as INode;\n\n  const nodeIsIframe = isIframe(n);\n  if (n.type === NodeType.Element && nodeIsIframe) {\n    return [node as INode, n.childNodes];\n  }\n\n  if (\n    (n.type === NodeType.Document || n.type === NodeType.Element) &&\n    !skipChild\n  ) {\n    for (const childN of n.childNodes) {\n      const [childNode, nestedNodes] = buildNodeWithSN(\n        childN,\n        doc,\n        map,\n        cbs,\n        false,\n        HACK_CSS,\n      );\n      if (!childNode) {\n        console.warn('Failed to rebuild', childN);\n        continue;\n      }\n\n      node.appendChild(childNode);\n      if (nestedNodes.length === 0) {\n        continue;\n      }\n      const childNodeIsIframe = isIframe(childN);\n      if (childNodeIsIframe) {\n        cbs.push(() =>\n          buildIframe(\n            (childNode as unknown) as HTMLIFrameElement,\n            nestedNodes,\n            map,\n            cbs,\n            HACK_CSS,\n          ),\n        );\n      }\n    }\n  }\n  return [node as INode, []];\n}\n\nfunction visit(idNodeMap: idNodeMap, onVisit: (node: INode) => void) {\n  function walk(node: INode) {\n    onVisit(node);\n  }\n\n  for (const key in idNodeMap) {\n    if (idNodeMap[key]) {\n      walk(idNodeMap[key]);\n    }\n  }\n}\n\nfunction handleScroll(node: INode) {\n  const n = node.__sn;\n  if (n.type !== NodeType.Element) {\n    return;\n  }\n  const el = (node as Node) as HTMLElement;\n  for (const name in n.attributes) {\n    if (!(n.attributes.hasOwnProperty(name) && name.startsWith('rr_'))) {\n      continue;\n    }\n    const value = n.attributes[name];\n    if (name === 'rr_scrollLeft') {\n      el.scrollLeft = value as number;\n    }\n    if (name === 'rr_scrollTop') {\n      el.scrollTop = value as number;\n    }\n  }\n}\n\nfunction rebuild(\n  n: serializedNodeWithId,\n  doc: Document,\n  onVisit?: (node: INode) => unknown,\n  /**\n   * This is not a public API yet, just for POC\n   */\n  HACK_CSS: boolean = true,\n): [Node | null, idNodeMap] {\n  const idNodeMap: idNodeMap = {};\n  const callbackArray: CallbackArray = [];\n  const [node] = buildNodeWithSN(\n    n,\n    doc,\n    idNodeMap,\n    callbackArray,\n    false,\n    HACK_CSS,\n  );\n  callbackArray.forEach((f) => f());\n  visit(idNodeMap, (visitedNode) => {\n    if (onVisit) {\n      onVisit(visitedNode);\n    }\n    handleScroll(visitedNode);\n  });\n  return [node, idNodeMap];\n}\n\nexport default rebuild;\n"],"names":["NodeType","_id","tagNameRegex","RegExp","IGNORED_NODE","genId","getValidTagName","tagName","processedTagName","toLowerCase","trim","test","getCssRulesString","s","rules","cssRules","Array","from","map","getCssRuleString","join","error","rule","isCSSImportRule","styleSheet","cssText","extractOrigin","url","indexOf","split","slice","URL_IN_CSS_REF","RELATIVE_PATH","DATA_URI","absoluteToStylesheet","href","replace","origin","quote1","path1","quote2","path2","path3","filePath","maybe_quote","stack","parts","pop","parts_1","_i","part","push","getAbsoluteSrcsetString","doc","attributeValue","srcItem","urlAndSize","trimLeft","trimRight","length","absoluteToDoc","a","createElement","isSVGElement","el","SVGElement","transformAttribute","name","value","location","_isBlockedElement","element","blockClass","blockSelector","classList","contains","forEach","className","matches","serializeNode","n","inlineStylesheet","maskInputOptions","recordCanvas","rootId","__sn","docId","id","undefined","nodeType","DOCUMENT_NODE","type","Document","childNodes","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","ELEMENT_NODE","needBlock","attributes_1","_a","attributes","_b","stylesheet","styleSheets","find","rel","_cssText","sheet","innerText","textContent","repeat","checked","selectValue","parentElement","selected","rr_dataURL","toDataURL","rr_mediaState","paused","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","_c","width","height","rr_width","rr_height","Element","isSVG","TEXT_NODE","parentTagName","parentNode","isStyle","Text","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","lowerIfExists","maybeAttr","slimDOMExcluded","sn","slimDOMOptions","comment","script","headFavicon","match","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","serializeNodeWithId","skipChild","preserveWhiteSpace","onSerialize","_serializedNode","console","warn","serializedNode","Object","assign","recordChild","headWhitespace","serializedChildNode","iframeDoc","contentDocument","serializedIframeNode","snapshot","maskAllInputsOrOptions","slimDOMSensibleOrOptions","idNodeMap","color","date","datetime-local","email","month","number","range","search","tel","text","time","week","textarea","select","visitSnapshot","node","onVisit","walk","current","cleanupSnapshot","commentre","parse","css","options","lineno","column","updatePosition","str","lines","i","lastIndexOf","position","start","line","Position","whitespace","this","end","source","prototype","content","errorsList","msg","err","Error","reason","filename","silent","open","close","comments","charAt","atrule","re","m","exec","c","pos","selector","declaration","propMatch","prop","val","ret","property","declarations","decl","decls","keyframe","vals","values","rulesList","atimport","_compileAtrule","atcharset","atnamespace","vendor","frame","frames","concat","keyframes","atkeyframes","media","style","atmedia","atcustommedia","supports","atsupports","document","atdocument","sel","selectors","atpage","athost","atfontface","addParent","parsingErrors","obj","parent","isNode","childParent","keys","isArray","v","defineProperty","configurable","writable","enumerable","tagMap","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","clippath","feblend","fecolormatrix","fecomponenttransfer","fecomposite","feconvolvematrix","fediffuselighting","fedisplacementmap","fedistantlight","fedropshadow","feflood","fefunca","fefuncb","fefuncg","fefuncr","fegaussianblur","feimage","femerge","femergenode","femorphology","feoffset","fepointlight","fespecularlighting","fespotlight","fetile","feturbulence","foreignobject","glyphref","lineargradient","radialgradient","getTagName","HOVER_SELECTOR","addHoverClass","ast","newSelector","isIframe","buildIframe","iframe","cbs","HACK_CSS","targetDoc","childNodes_1","childN","log","buildNodeWithSN","buildNode","implementation","createDocument","createDocumentType","node_1","createElementNS","hasOwnProperty","startsWith","image_1","src","onload","ctx","getContext","drawImage","play","pause","isTextarea","isRemoteOrDynamicCss","child","createTextNode","removeChild","appendChild","setAttributeNS","substring","setAttribute","createCDATASection","createComment","assert","nodeIsIframe","childNode","nestedNodes","visit","key","handleScroll","rebuild","callbackArray","f","visitedNode"],"mappings":"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"}